select * from moviebox;

insert into moviebox(movieno,moviename,station)
VALUES(1,'롯데','잠실');
insert into moviebox
VALUES(2,'메가','강남');
insert into moviebox
VALUES(3,'대한','잠실');


create table cinema(
movieno number,
showno number,
name varchar2(50),
price number check(price <20000),
sitcount number,
primary key(movieno,showno));

create table reservation(
movieno number,
showno number check(showno >=1) check(showno<=10),
custno number,
sitno number,
rdate date,
PRIMARY key (movieno,showno,custno)
);

select * from cinema;
insert into cinema
VALUES(1,1,'어려운 영화',15000,48);
insert into cinema
values(3,1,'멋진 영화',7500,120);
insert into cinema
values(3,2,'재밌는 영화',8000,110);

select * from reservation;
insert into reservation
values(3,2,3,15,'2020-09-01');
insert into reservation
values(3,1,4,16,'2020-09-01');
insert into reservation
values(1,1,9,48,'2020-09-01');

select*from mcustomer;
insert into mcustomer
values(3,'홍길동','강남');
insert into mcustomer
values(4,'김철수','잠실');
insert into mcustomer
values(9,'박영희','강남');
--모든 극장의 이름과 위치를 보이시오
select*from moviebox;
--잠실에 있는 극장을 보이시오
select station
from moviebox
where movieno=1;
--잠실에 사는 고객의 이름을 오름차순으로 보이시오
select name
from mcustomer
where address like '잠실'
order by mcustomer.name;

--가격이 8000원 이하인 영화의 극장번호,상영번호,영화제목을 보이시오
select movieno,showno,name
from cinema
where price<=8000;

--극장 위치와 고객의 주소가 같은 고객을 보이시오
select distinct name,address
from mcustomer,moviebox
where moviebox.station=mcustomer.address;


--극장의 수는 몇개인가
select count(*)
from moviebox;
--상영되는 영화의 평균 가격은 얼마인가
select avg(price)
from cinema;

--2020년9월 1일에 영화를 관람한 고객의 수는 얼마인가
select count(*)
from reservation
where rdate= '2020-09-01';

select count(*) from mcustomer m,reservation r
where m.custno= r.custno and r.rdate='2020-09-01';
-------------대한극장에서 상영된 영화제목을 보이시오
select*from moviebox;
select*from cinema;
select c.name 
from cinema c,moviebox m
where C.movieno=M.movieno and m.MOVIENAME= '대한';

select*from cinema
where movieno like 
(select name from moviebox where moviebox.moviename like '대한');
------------대한극장에서 영화를 본 고객의 이름을 보이시오
SELECT m.name
from mcustomer m, moviebox b,reservation r
where b.movieno=r.movieno and r.custno=m.custno
WHERE b.moviename like '대한';
 
--대한극장의 전체수입을 보이시오
SELECT SUM(PRICE)
FROM MOVIEBOX JOIN CINEMA ON MOVIEBOX.MOVIENO= CINEMA.MOVIENO
WHERE MOVIEBOX.MOVIENO=1;

------극장별 상영관 수를 보이시오
select count(c.sitcount)
from cinema c,moviebox b
where c.movieno= b.movieno;

--잠실에 있는 극장의 상영관을 보이시오
select c.name
from moviebox m, cinema c
where m.movieno=c.movieno and m.station='잠실';

--2020년 9월 1일의 극장별 평균 관람 고객수를 보이시오
select count(*)
from reservation r
where r.rdate='20200901';

--2020년 9월1일에 가장 많은 고객이 관람한 영화를 보이시오
select distinct c.name
from reservation r, cinema c 
where r.movieno=c.movieno and r.rdate ='20200901';

select c.name
from reservation r JOIN cinema c on r.movieno=c.movieno AND r.showno=c.showno
join moviebox m on m.movieno= c.movieno
where r.rdate='20200901';

--각 테이블에 데이터를 삽입하는 insert문을 하나씩 실행시켜보시오
insert into moviebox
values(4,'대한','잠실');


--영화의 가격을 10%씩 인상하시오
SELECT PRICE
FROM 
